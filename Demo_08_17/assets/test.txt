malloc与free是C++/C语言的标准库函数，new/delete是C++的运算符。 它们都可
用于申请动态内存和释放内存。
对于非内部数据类型的对象而言，只用malloc/free无法满足动态对象的要求。 对象在创
建的同时要自动执行构造函数，对象在消亡之前要自动执行析构函数。 由于malloc/free是库
函数而不是运算符，不在编译器控制权限之内，不能够把执行构造函数和析构函数的任务强
加于malloc/free。
因此C++语言需要一个能完成动态内存分配和初始化工作的运算符new，以及一个能完
成清理与释放内存工作的运算符delete。 new/delete不是库函数，而是运算符。